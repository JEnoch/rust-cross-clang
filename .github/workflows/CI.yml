name: ci

on:
  push:
    branches: ["main"]

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          python3 -c 'import glob, json; files=glob.glob("Dockerfile.*"); images=list(map(lambda f: {"file":f, "arch":f[11:]}, files)); print("::set-output name=matrix::"+json.dumps({"image": images}))'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  builds:
    name: Build for ${{ matrix.job.target }} on ${{ matrix.job.os }}
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_COM_USERNAME }}
          password: ${{ secrets.DOCKER_COM_PASSWORD }}
      - name: Build jenoch/rust-cross:${{ matrix.image.arch }} from ${{ matrix.dockerfile }}
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: false
          file: ${{ matrix.image.file }}
          tags: jenoch/rust-cross:${{ matrix.image.arch }}
